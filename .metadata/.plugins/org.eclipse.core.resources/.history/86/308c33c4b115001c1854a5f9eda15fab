package sr.bludots.memory;

import java.io.File;

import java.io.FileWriter;
import java.io.IOException;

/**
 * Schrijf een programma
 * 
 * - Dat een serie van willekeurige namen maakt en deze naar een file write. -
 * een functie waarbij u directory listing opvraagt nadat u zelf de gebruiker om
 * een specifieke directory naam vraagt - een functie waarbij u een file delete
 * als deze groter is geworden dan 1000 bytes. (file.size of lenght)
 * 
 */

public class FileProgram {

	// random names
	private static String[] names = { "Abigail Tornogrodzki", "Ryann Kertotiko","Juscelino Kartoebi", "Kenz Karijo", "Rafael van Kallen" };
	
	
	
	public static void main(String[] args) {
		//
		createTextFile();
	}
	
	//create textfield 
	public static void createTextFile() {

		File textFile = new File("ListofNames.txt");
		File dir = new File(".");
		String[] files = dir.list();
		for (String name : files) {
			System.err.println(name);
		}
	
		int amount = 0;
		while (amount < names.length) {
			try {
				FileWriter writer = new FileWriter(textFile, true);
				writer.write(names[amount++]+"\n");
				writer.close();
			} catch (IOException io) {
				System.err.println("Something went wrong:" + io.getMessage());
			}
		}
	}
		
		//method delete files bigger than 1000bytes
//	private void deleteFileOrFolder(File file){
//	    try {
//	        for (File f : file.listFiles()) {
//	            f.delete();
//	            deleteFileOrFolder(f);
//	        }
//	    } catch (Exception e) {
//	        e.printStackTrace(System.err);
//	    }
//	}
	//weer checken of het werkt
		private static void deleteFile(File file) {
			
	            if(file.length() > 1000) {
	            	
	               file.delete();
	           
	        	System.out.println("File ("+file.getName()+") is bigger than a 1000 bytes, so it is deleted");
			} else {
				System.out.println("File ("+file.getName()+") is less than a 1000 bytes, so it is not deleted");
			}
	    }
	}
